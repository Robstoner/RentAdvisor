name: rentadvisor
services:
  backend:
    container_name: backend
    image: ${DOCKER_REGISTRY-}rentadvisorserver
    build:
      context: .
      dockerfile: RentAdvisor.Server/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - 8080:8080
      - 8081:8081
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - rentadvisor

  sqlserver:
    container_name: database
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=RentAdvisor@123
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'RentAdvisor@123' -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
      - rentadvisor

  # web:
  #   container_name: frontend
  #   image: ${DOCKER_REGISTRY-}rentadvisorweb
  #   build:
  #     context: .
  #     dockerfile: RentAdvisor.client/Dockerfile
  #   ports:
  #     - 3000:80
  #   environment:
  #     - ASPNETCORE_URLS=http://backend:8080
  #   networks:
  #     - rentadvisor
  #   depends_on:
  #     - backend

volumes:
  sqlserver_data:    

networks:
  rentadvisor:
  